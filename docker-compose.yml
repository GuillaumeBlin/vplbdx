version: '3.3'

services:
  proxy:
    image: openresty/openresty
    ports:
     - "80:80"
     - "443:443" 
    volumes:
      - /vplbdx/ssl:/usr/local/openresty/nginx/conf
      - /vplbdx/certbot/www:/var/www/certbot
      - /vplbdx/certbot/conf:/etc/letsencrypt
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - vplbdx
    deploy:
      placement:
        constraints:
          - node.role == manager
  certbot:
    image: certbot/certbot
    volumes:
        - /vplbdx/certbot/conf:/etc/letsencrypt
        - /vplbdx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew -q; sleep 72h & wait $${!}; done;'"
  vplbdx:
    image: gblin/vplpyjailcertbot
    environment:
      - PROXY_MOODLE_PATH=${PROXY_MOODLE_PATH}
      - PROXY_PORT=443
      - SERVER_NAME=${SERVER_NAME}
      - REGISTRY_PORT=${REGISTRY_PORT}
      - MAXTIME=${MAXTIME}
      - MAXFILESIZE=${MAXFILESIZE}
      - MAXMEMORY=${MAXMEMORY}
      - MAXPROCESSES=${MAXPROCESSES}
    volumes:
      - /vplbdx/certbot/conf:/etc/letsencrypt
      - /vplbdx/ssl:/vplbdx/ssl
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /dev/kvm:/dev/kvm
      - /dev/dri:/dev/dri
      - /tmp/.X11-unix:/tmp/.X11-unix
    deploy:
      replicas: ${NB_REPLICAS}

  tmper:
    image: gblin/tmpercertbot    
    container_name: tmper
    privileged: true
    environment:
      - SERVER_NAME=${SERVER_NAME}
    volumes:
      - /vplbdx/tmper_data:/permanent
    deploy:
      placement:
        constraints:
          - node.role == manager
  mongo:
    restart: always
    image: mongo
    container_name: mongo
    volumes:
      - /vplbdx/mongo_data:/data/db
    deploy:
      placement:
        constraints:
          - node.role == manager
  redis:
    restart: always
    image: redis
    container_name: redis
    volumes:
       - /vplbdx/redis_data:/data
    deploy:
      placement:
        constraints:
          - node.role == manager
networks:
  default:
    external:
      name: vplpynet
