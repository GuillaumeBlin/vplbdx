# JAIL service proxy configuration
# Guillaume Blin and Corentin Abel Mercier - guillaume.blin@u-bordeaux.fr ; corentin-abel.mercier@etu.u-bordeaux.fr
# copyright 2019 Guillaume Blin - Corentin Abel Mercier
# license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later

worker_processes auto;
 
events {worker_connections 1024; }
 
http {
  sendfile on;
  resolver 127.0.0.11 valid=1s;
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  } 
  
  server {
    client_body_buffer_size 500M;
    client_max_body_size 500M;
    
    listen 443 ssl;    
    ssl_certificate     secure.crt;
    ssl_certificate_key secure.key;
    error_log  /var/log/nginx.log error;

    location ~ (monitor|execute)$ {
      set $upstream moodpy_vplbdx:8093;
      rewrite_by_lua '
        local method = ngx.var.request_method
        ngx.log(ngx.NOTICE,"WS Method")
        ngx.log(ngx.NOTICE,method)
        ngx.log(ngx.NOTICE,"WS URI GET")
        ngx.log(ngx.NOTICE,ngx.var.request_uri)
        local docker = string.sub(ngx.var.request_uri, string.find(ngx.var.request_uri,"192.169.%d+.%d+"));
        ngx.log(ngx.NOTICE,"WS Docker GET")
        ngx.log(ngx.NOTICE,docker);
        ngx.var.upstream=docker..":8093";
        local uri = string.gsub(ngx.var.request_uri, "192.169.%d+.%d+/", "")
        if ngx.var.request_uri ~=nil and string.find(ngx.var.request_uri, "execute") ~= nil then  
                uri = "/";
        end
        ngx.log(ngx.NOTICE,"WS URI GET")
        ngx.log(ngx.NOTICE,uri);
        ngx.req.set_uri(uri);
      ';
      proxy_pass         https://$upstream;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_ignore_client_abort on;
      # VNC connection timeout
      proxy_read_timeout 900s;
      # Disable cache
      proxy_buffering off;
    }

    location /vplavailable{
      return 204;
    }
	
    location / {
      set $upstream moodpy_vplbdx:8092;
      rewrite_by_lua '
        local method = ngx.var.request_method
        ngx.log(ngx.NOTICE,"Method")
        ngx.log(ngx.NOTICE,method)
        if method == "POST" then
          ngx.req.read_body()
          local data = ngx.req.get_body_data()
          ngx.log(ngx.NOTICE,"Data Post")
          ngx.log(ngx.NOTICE,data)
          if data ~=nil then
            ngx.req.set_body_data((string.gsub(data, "192.169.%d+.%d+/", ""))) 
          end
          if data ~=nil and string.find(data, "adminticket") ~= nil then  
            local docker = string.sub(data, string.find(data, "192.169.%d+.%d+"))
            ngx.log(ngx.NOTICE,"Docker Post")
            ngx.log(ngx.NOTICE,docker)
            if docker ~= nil then 
              ngx.var.upstream=docker..":8092"
            end
          end
          ngx.log(ngx.NOTICE,"Upstream Post")
          ngx.log(ngx.NOTICE,ngx.var.upstream)	
        end
      ';
      proxy_pass         https://$upstream;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_ignore_client_abort on;
      # VNC connection timeout
      proxy_read_timeout 900s;
      # Disable cache
      proxy_buffering off;
    }
  }  
}
